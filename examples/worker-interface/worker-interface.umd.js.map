{"version":3,"file":"worker-interface.umd.js","sources":["../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/utils/src/utils.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/command/src/command.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/command/src/command-chain.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/proxy/src/command.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/proxy/src/types.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/proxy/src/proxy.js","../../../node_modules/@actualwave/has-own/index.es.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/proxy/src/utils.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/proxy/src/traps.js","../../../node_modules/@actualwave/weak-storage/index.es.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/resource/src/resource.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/resource/src/utils.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/resource/src/resource-pool.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/resource/src/default-resource-pool.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/resource/src/resource-pool-registry.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/interface/src/request.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/interface/src/utils.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/interface/src/handshake.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/interface/src/helpers.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/core/core.js","../../../packages/worker-interface/node_modules/@actualwave/deferred-data-access/interface/src/intialize.js","../../../../../packages/worker-interface/src/worker-interface.ts"],"sourcesContent":["const DATE_NOW = Date.now() - Math.floor(Math.random() * 1000);\r\nlet index = 0;\r\nexport var ReservedPropertyNames;\r\n(function (ReservedPropertyNames) {\r\n    ReservedPropertyNames[\"THEN\"] = \"then\";\r\n    ReservedPropertyNames[\"CATCH\"] = \"catch\";\r\n})(ReservedPropertyNames || (ReservedPropertyNames = {}));\r\nexport const isReservedPropertyName = (name) => name === ReservedPropertyNames.THEN || name === ReservedPropertyNames.CATCH;\r\nexport const reject = async (message) => {\r\n    throw message;\r\n};\r\nexport const createUIDGenerator = (key = '') => {\r\n    const prefix = `${key ? `${key}/` : ''}${DATE_NOW}/`;\r\n    return () => `${prefix}${++index};`;\r\n};\r\nexport const generateId = createUIDGenerator();\r\nexport class IdOwner {\r\n    constructor(id = generateId()) {\r\n        this.id = id;\r\n    }\r\n}\r\n//# sourceMappingURL=utils.js.map","export class Command {\r\n    constructor(type, name, value, context) {\r\n        this.type = type;\r\n        this.name = name;\r\n        this.value = value;\r\n        this.context = context;\r\n    }\r\n    toObject(includeContext = false) {\r\n        const { type, name, value, context } = this;\r\n        return {\r\n            type,\r\n            name,\r\n            value,\r\n            context: includeContext ? context : undefined,\r\n        };\r\n    }\r\n    toJSON(includeContext = false) {\r\n        const { type, name, value, context } = this;\r\n        return JSON.stringify([\r\n            type,\r\n            name,\r\n            value,\r\n            includeContext ? context : undefined,\r\n        ]);\r\n    }\r\n    static fromJSON(jsonString) {\r\n        const [type, name, value, context] = JSON.parse(jsonString);\r\n        return new Command(type, name, value, context);\r\n    }\r\n}\r\n//# sourceMappingURL=command.js.map","import { Command } from './command';\r\nexport class CommandChain extends Command {\r\n    constructor(prev, type, name, value, context) {\r\n        super(type, name, value, context);\r\n        this.prev = prev;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        let item = this;\r\n        while (item) {\r\n            yield item;\r\n            item = item.prev;\r\n        }\r\n    }\r\n    isTail() {\r\n        return !this.prev;\r\n    }\r\n    forEach(callback) {\r\n        let node = this;\r\n        do {\r\n            callback(node);\r\n            node = node.prev;\r\n        } while (node);\r\n    }\r\n    map(callback) {\r\n        let node = this;\r\n        const list = [];\r\n        do {\r\n            list.push(callback(node));\r\n            node = node.prev;\r\n        } while (node);\r\n        return list;\r\n    }\r\n    reduce(callback, base) {\r\n        let node = this;\r\n        let result = base;\r\n        do {\r\n            result = callback(result, node);\r\n            node = node.prev;\r\n        } while (node);\r\n        return result;\r\n    }\r\n    static fromCommand({ type, name, value, context }, prev) {\r\n        return new CommandChain(prev, type, name, value, context);\r\n    }\r\n}\r\n//# sourceMappingURL=command-chain.js.map","import { CommandChain } from '@actualwave/deferred-data-access/command';\r\nexport var ProxyCommand;\r\n(function (ProxyCommand) {\r\n    ProxyCommand[\"GET\"] = \"P:get\";\r\n    ProxyCommand[\"SET\"] = \"P:set\";\r\n    ProxyCommand[\"APPLY\"] = \"P:apply\";\r\n    ProxyCommand[\"DELETE_PROPERTY\"] = \"P:del\";\r\n    // If proxy works in lazy mode and APPLY command has previous GET command, this will be generated.\r\n    ProxyCommand[\"METHOD_CALL\"] = \"P:call\";\r\n})(ProxyCommand || (ProxyCommand = {}));\r\nexport const generateProxyCommand = (head, type, name, value, context, lazy) => {\r\n    if (type === ProxyCommand.APPLY && lazy && head?.type === ProxyCommand.GET) {\r\n        return new CommandChain(head.prev, ProxyCommand.METHOD_CALL, head.name, value, head.context);\r\n    }\r\n    return new CommandChain(head, type, name, value, context);\r\n};\r\nexport const getMethodName = ({ prev }) => prev?.name;\r\nexport const getMethodCallContext = ({ prev }) => prev?.context;\r\n//# sourceMappingURL=command.js.map","export const EXCLUSIONS = {\r\n    /*\r\n     INFO arguments and caller were included because they are required function properties\r\n     https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\r\n     */\r\n    arguments: true,\r\n    caller: true,\r\n    prototype: true,\r\n};\r\nexport const API_PROP = Symbol('P:api');\r\n//# sourceMappingURL=types.js.map","import { API_PROP } from './types';\r\nexport const wrapWithProxy = (\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntarget, traps, api = {}) => {\r\n    const wrapper = Object.assign(typeof target === 'function'\r\n        ? function $RequestFn(...args) {\r\n            return target.apply(this, args);\r\n        }\r\n        : function $Request() {\r\n            // because\r\n        }, {\r\n        target,\r\n        [API_PROP]: { getTarget: () => target, ...api },\r\n    });\r\n    return new Proxy(wrapper, traps);\r\n};\r\nexport const isWrappedWithProxy = (obj) => !!(obj && obj[API_PROP]);\r\nexport const unwrapProxy = (obj) => obj && obj[API_PROP] && obj[API_PROP].getTarget() || obj;\r\n//# sourceMappingURL=proxy.js.map","export const hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexport default hasOwn;","import { hasOwn } from '@actualwave/has-own';\r\nimport { ProxyCommand, getMethodCallContext } from './command';\r\nimport { API_PROP, EXCLUSIONS } from './types';\r\nexport const isNameExcluded = (name) => name === API_PROP || hasOwn(EXCLUSIONS, name);\r\nexport const isNameSymbol = (name) => typeof name === 'symbol';\r\nexport const followCommandChain = async (head, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncontext) => {\r\n    let target = context;\r\n    if (!context) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        target = head.prev\r\n            ? await followCommandChain(head.prev)\r\n            : head.context;\r\n    }\r\n    const { type, name, value } = head;\r\n    switch (type) {\r\n        case ProxyCommand.GET:\r\n            return target[name];\r\n        case ProxyCommand.APPLY:\r\n            return target.apply(getMethodCallContext(head), value);\r\n    }\r\n    throw new Error(`Unknown command \"${type}\" cannot be followed, only ProxyCommand.GET and APPLY are allowed.`);\r\n};\r\n//# sourceMappingURL=utils.js.map","import { ProxyCommand } from './command';\r\nimport { EXCLUSIONS } from './types';\r\nimport { isNameExcluded } from './utils';\r\nconst createGetTrap = (handler) => (wrapper, name) => {\r\n    const { target } = wrapper;\r\n    if (isNameExcluded(name)) {\r\n        return wrapper[name];\r\n    }\r\n    // We expect that user of the lib will wrap with Proxy explicitly whatever they want\r\n    return handler(ProxyCommand.GET, name, undefined, target);\r\n};\r\nconst createApplyTrap = (handler) => ({ target }, thisValue, args) => {\r\n    // thisValue is being ignored for now\r\n    // target is a function that should be applied\r\n    return handler(ProxyCommand.APPLY, undefined, args, target);\r\n};\r\nconst createSetTrap = (handler) => ({ target }, name, value) => {\r\n    if (isNameExcluded(name)) {\r\n        return false;\r\n    }\r\n    /* TODO why this might be needed?\r\n    if (isNameSymbol(name)) {\r\n      target.then((context: any) => {\r\n        context[name] = value;\r\n      });\r\n\r\n      return false;\r\n    }\r\n    */\r\n    handler(ProxyCommand.SET, name, value, target);\r\n    return true;\r\n};\r\nconst createDeletePropertyTrap = (handler) => (wrapper, name) => {\r\n    if (isNameExcluded(name)) {\r\n        return false;\r\n    }\r\n    handler(ProxyCommand.DELETE_PROPERTY, name, undefined, wrapper.target);\r\n    return true;\r\n};\r\nconst proxyHasTrap = (wrapper, name) => {\r\n    if (isNameExcluded(name)) {\r\n        return wrapper[name];\r\n    }\r\n    // because of this Promise does not call ProxyWrapper.then() and just returns it.\r\n    // if change to true, it will subscribe to ProxyWrapper.then() and wait for it to resolve\r\n    return false;\r\n};\r\nconst proxyOwnKeysTrap = () => Object.getOwnPropertyNames(EXCLUSIONS);\r\n// INFO You cannot enumerate properties of request object, this may possibly require processing a lot of data\r\nconst proxyEnumerateTrap = () => Object.getOwnPropertyNames(EXCLUSIONS)[Symbol.iterator]();\r\nconst proxyGetOwnPropertyDescriptorTrap = (wrapper, name) => {\r\n    if (isNameExcluded(name)) {\r\n        return Object.getOwnPropertyDescriptor(wrapper, name);\r\n    }\r\n    return Object.getOwnPropertyDescriptor(wrapper.target, name);\r\n};\r\nexport const createProxyTrapsObject = (handler) => ({\r\n    get: createGetTrap(handler),\r\n    apply: createApplyTrap(handler),\r\n    set: createSetTrap(handler),\r\n    deleteProperty: createDeletePropertyTrap(handler),\r\n    has: proxyHasTrap,\r\n    ownKeys: proxyOwnKeysTrap,\r\n    enumerate: proxyEnumerateTrap,\r\n    getOwnPropertyDescriptor: proxyGetOwnPropertyDescriptorTrap,\r\n});\r\n//# sourceMappingURL=traps.js.map","class KeysIterator {\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.mapIterator = this.map.keys();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new KeysIterator(this.map);\r\n    }\r\n    next() {\r\n        let key;\r\n        let value;\r\n        let done;\r\n        do {\r\n            ({ done, value: key } = this.mapIterator.next());\r\n            if (!done) {\r\n                value = this.map.get(key).deref();\r\n            }\r\n        } while (!done && !value);\r\n        return {\r\n            done,\r\n            value: key,\r\n        };\r\n    }\r\n}\n\nclass ValuesIterator {\r\n    constructor(mapIterator) {\r\n        this.mapIterator = mapIterator;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new ValuesIterator(this.mapIterator[Symbol.iterator]());\r\n    }\r\n    next() {\r\n        let ref;\r\n        let value;\r\n        let done;\r\n        do {\r\n            ({ done, value: ref } = this.mapIterator.next());\r\n            if (done) {\r\n                value = undefined;\r\n            }\r\n            else {\r\n                value = ref.deref();\r\n            }\r\n        } while (!done && !value);\r\n        return {\r\n            done,\r\n            value,\r\n        };\r\n    }\r\n}\n\nclass EntriesIterator {\r\n    constructor(mapIterator) {\r\n        this.mapIterator = mapIterator;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EntriesIterator(this.mapIterator[Symbol.iterator]());\r\n    }\r\n    next() {\r\n        let entries;\r\n        let value;\r\n        let done;\r\n        do {\r\n            ({ done, value: entries } = this.mapIterator.next());\r\n            if (done) {\r\n                entries = undefined;\r\n            }\r\n            else {\r\n                value = entries[1].deref();\r\n                entries = [entries[0], value];\r\n            }\r\n        } while (!done && !value);\r\n        return {\r\n            done,\r\n            entries,\r\n        };\r\n    }\r\n}\n\nclass WeakValueMap {\r\n    constructor(autoVerify = true) {\r\n        this.map = new Map();\r\n        if (autoVerify) {\r\n            this.finalizer = new FinalizationRegistry((key) => {\r\n                const ref = this.map.get(key);\r\n                if (!ref || !ref.deref()) {\r\n                    this.map.delete(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    get size() {\r\n        return this.map.size;\r\n    }\r\n    keys() {\r\n        return new KeysIterator(this.map);\r\n    }\r\n    values() {\r\n        return new ValuesIterator(this.map.values());\r\n    }\r\n    entries() {\r\n        return new EntriesIterator(this.map.entries());\r\n    }\r\n    set(key, value) {\r\n        this.map.set(key, new WeakRef(value));\r\n    }\r\n    get(key) {\r\n        const ref = this.map.get(key);\r\n        return ref && ref.deref();\r\n    }\r\n    has(key) {\r\n        return !!this.get(key);\r\n    }\r\n    delete(key) {\r\n        return this.map.delete(key);\r\n    }\r\n    clear() {\r\n        this.map.clear();\r\n    }\r\n    forEach(callback) {\r\n        this.map.forEach((ref, key) => {\r\n            const value = ref.deref();\r\n            if (value) {\r\n                callback(value, key, this);\r\n            }\r\n        });\r\n    }\r\n    verify() {\r\n        const map = new Map();\r\n        this.map.forEach((ref, key) => {\r\n            const value = ref.deref();\r\n            if (value) {\r\n                map.set(key, ref);\r\n            }\r\n        });\r\n        this.map.clear();\r\n        this.map = map;\r\n    }\r\n}\n\nclass WeakStorage extends WeakValueMap {\r\n    constructor(autoVerify) {\r\n        super(autoVerify);\r\n        this.byValues = new WeakMap();\r\n    }\r\n    set(key, value) {\r\n        super.set(key, value);\r\n        this.byValues.set(key, value);\r\n    }\r\n    getKey(value) {\r\n        return this.byValues.get(value);\r\n    }\r\n    delete(key) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            this.byValues.delete(value);\r\n        }\r\n        return super.delete(key);\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.byValues = new WeakMap();\r\n    }\r\n}\n\nexport { WeakStorage, WeakValueMap };\n","import { IdOwner } from '@actualwave/deferred-data-access/utils';\r\nexport class Resource extends IdOwner {\r\n    constructor(pool, type) {\r\n        super();\r\n        this.pool = pool;\r\n        this.type = type;\r\n    }\r\n    toObject() {\r\n        return { id: this.id, poolId: this.pool.id, type: this.type };\r\n    }\r\n    toJSON() {\r\n        return JSON.stringify(this.toObject());\r\n    }\r\n}\r\nexport const createResource = (pool, target, type) => new Resource(pool, type || typeof target);\r\nexport const isResourceObject = (obj) => obj &&\r\n    // type signature is not enough for non-ts env\r\n    typeof obj === 'object' &&\r\n    typeof obj.id === 'string' &&\r\n    typeof obj.poolId === 'string';\r\n//# sourceMappingURL=resource.js.map","const validTargets = new Set();\r\nexport const getDefaultValidTargets = () => ['object', 'function'];\r\nexport const isValidTarget = (value) => validTargets.has(typeof value);\r\nexport const setValidTargets = (list) => {\r\n    validTargets.clear();\r\n    list.forEach((item) => validTargets.add(item));\r\n};\r\nsetValidTargets(getDefaultValidTargets());\r\n//# sourceMappingURL=utils.js.map","/* eslint-disable @typescript-eslint/ban-types */\r\nimport { IdOwner } from '@actualwave/deferred-data-access/utils';\r\nimport { WeakValueMap } from '@actualwave/weak-storage';\r\nimport { createResource } from './resource';\r\nimport { isValidTarget } from './utils';\r\nexport class ResourcePool extends IdOwner {\r\n    constructor() {\r\n        super(...arguments);\r\n        // { [string]: weakref }\r\n        this.refs = new WeakValueMap();\r\n        // { [weakref]: Resource }\r\n        this.resources = new WeakMap();\r\n    }\r\n    get active() {\r\n        return !!this.resources;\r\n    }\r\n    set(target, type) {\r\n        let resource = null;\r\n        if (!isValidTarget(target)) {\r\n            return resource;\r\n        }\r\n        resource = this.resources.get(target);\r\n        if (!resource) {\r\n            resource = createResource(this, target, type);\r\n            this.refs.set(resource.id, target);\r\n            this.resources.set(target, resource);\r\n        }\r\n        return resource;\r\n    }\r\n    has(target) {\r\n        return this.resources.has(target);\r\n    }\r\n    get({ id }) {\r\n        return this.getById(id);\r\n    }\r\n    getById(id) {\r\n        return this.refs.get(id);\r\n    }\r\n    getResource(target) {\r\n        return this.resources.get(target);\r\n    }\r\n    remove(target) {\r\n        const resource = this.resources.get(target);\r\n        if (resource) {\r\n            this.refs.delete(resource.id);\r\n            return this.resources.delete(target);\r\n        }\r\n        return false;\r\n    }\r\n    clear() {\r\n        for (const key of this.refs.keys()) {\r\n            const target = this.refs.get(key);\r\n            this.resources.delete(target);\r\n        }\r\n        this.refs.clear();\r\n    }\r\n}\r\n//# sourceMappingURL=resource-pool.js.map","import { ResourcePool } from \"./resource-pool\";\r\nconst generateGetDefaultResourcePool = (pool) => () => {\r\n    if (!pool) {\r\n        pool = new ResourcePool();\r\n    }\r\n    return pool;\r\n};\r\nexport const getDefaultResourcePool = generateGetDefaultResourcePool();\r\n//# sourceMappingURL=default-resource-pool.js.map","import { hasOwn } from '@actualwave/has-own';\r\nimport { IdOwner } from '@actualwave/deferred-data-access/utils';\r\nimport { getDefaultResourcePool } from './default-resource-pool';\r\nimport { ResourcePool } from './resource-pool';\r\nexport class ResourcePoolRegistry extends IdOwner {\r\n    constructor() {\r\n        super();\r\n        this.pools = {};\r\n        this.register(getDefaultResourcePool());\r\n    }\r\n    /**\r\n     * Create and register ResourcePool\r\n     */\r\n    createPool() {\r\n        const pool = new ResourcePool();\r\n        this.register(pool);\r\n        return pool;\r\n    }\r\n    /**\r\n     * Register ResourcePool instance.\r\n     */\r\n    register(pool) {\r\n        if (hasOwn(this.pools, pool.id))\r\n            return false;\r\n        this.pools[pool.id] = pool;\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve ResourcePool instance from registry by its Id.\r\n     */\r\n    get(poolId) {\r\n        return this.pools[poolId] || null;\r\n    }\r\n    /**\r\n     * Check if ResourcePool registered in this registry instance.\r\n     */\r\n    isRegistered(pool) {\r\n        return hasOwn(this.pools, pool.id);\r\n    }\r\n    /**\r\n     * Remove ResourcePool from current registry instance.\r\n     */\r\n    remove(pool) {\r\n        const poolId = typeof pool === 'string' ? pool : pool.id;\r\n        return delete this.pools[poolId];\r\n    }\r\n}\r\nconst generateGetRegistry = (registry) => () => {\r\n    if (!registry) {\r\n        registry = new ResourcePoolRegistry();\r\n    }\r\n    return registry;\r\n};\r\nexport const getRegistry = generateGetRegistry();\r\n//# sourceMappingURL=resource-pool-registry.js.map","import { ProxyCommand } from '@actualwave/deferred-data-access/proxy';\r\nimport { getRegistry, isResourceObject, } from '@actualwave/deferred-data-access/resource';\r\nconst registry = getRegistry();\r\nexport const pool = registry.createPool();\r\nconst extractResourceFrom = (value) => {\r\n    if (!isResourceObject(value)) {\r\n        return value;\r\n    }\r\n    const { poolId, id } = value;\r\n    const pool = getRegistry().get(poolId);\r\n    if (!pool) {\r\n        throw new Error(`Resource Pool \"${poolId}\" does not exist.`);\r\n    }\r\n    const target = pool.getById(id);\r\n    if (!target) {\r\n        throw new Error(`Resource \"${id}\" does not exist, pool \"${poolId}\".`);\r\n    }\r\n    return target;\r\n};\r\nexport const applyRemoteRequest = ({ command, command: { type, value }, context, }) => {\r\n    const target = extractResourceFrom(context);\r\n    const name = command.name;\r\n    if (type !== ProxyCommand.APPLY && !target) {\r\n        throw new Error(`Cannot excute command ${type}/${String(name)} on non existent target(${target}).`);\r\n    }\r\n    let result;\r\n    switch (type) {\r\n        case ProxyCommand.GET:\r\n            result = target[name];\r\n            break;\r\n        case ProxyCommand.SET:\r\n            return (target[name] = extractResourceFrom(value));\r\n        case ProxyCommand.DELETE_PROPERTY:\r\n            return delete target[name];\r\n        case ProxyCommand.APPLY:\r\n            {\r\n                const [exeContext, args] = value;\r\n                result = target.apply(extractResourceFrom(exeContext), args.map(extractResourceFrom));\r\n            }\r\n            break;\r\n        case ProxyCommand.METHOD_CALL:\r\n            result = target[name](...value.map(extractResourceFrom));\r\n            break;\r\n    }\r\n    if (result && typeof result === 'function') {\r\n        const resource = pool.set(result);\r\n        return resource.toObject();\r\n    }\r\n    return result;\r\n};\r\n//# sourceMappingURL=request.js.map","import { createUIDGenerator, } from '@actualwave/deferred-data-access/utils';\r\nimport { ProxyCommand, unwrapProxy, } from '@actualwave/deferred-data-access/proxy';\r\nimport { isWrappedWithProxy } from '@actualwave/deferred-data-access/proxy';\r\nimport { pool } from './request';\r\nexport var InterfaceType;\r\n(function (InterfaceType) {\r\n    InterfaceType[\"HOST\"] = \"host\";\r\n    InterfaceType[\"GUEST\"] = \"guest\";\r\n})(InterfaceType || (InterfaceType = {}));\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"REQUEST\"] = \"request\";\r\n    MessageType[\"RESPONSE\"] = \"response\";\r\n})(MessageType || (MessageType = {}));\r\nexport const generateId = createUIDGenerator('wi');\r\nexport const generateMessageId = createUIDGenerator('m');\r\nconst lookupForResource = async (value) => {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (value instanceof Array) {\r\n        const list = [];\r\n        for (let item of value) {\r\n            list.push(await lookupForResource(item));\r\n        }\r\n        return list;\r\n    }\r\n    if (isWrappedWithProxy(value)) {\r\n        const target = await unwrapProxy(value);\r\n        return lookupForResource(target);\r\n    }\r\n    if (typeof value === 'function') {\r\n        const resource = pool.set(value);\r\n        return resource.toObject();\r\n    }\r\n    return value;\r\n};\r\n/*\r\nMessage signature\r\n\r\n{\r\n  id, // every sent message has id, request and its response have same id\r\n  type, // message type -- \"request\" or \"response\"\r\n  source, // sender worker interface id\r\n  target, // receiver worker interface id\r\n  command, // request proxy command\r\n  context, // request command context\r\n  value, // response value\r\n  error, // response error\r\n}\r\n*/\r\nexport const createRequestMessage = (source, target) => async (commandChain, context, id = generateMessageId()) => {\r\n    const command = commandChain.toObject();\r\n    const contextTarget = await context;\r\n    // apply function to owner object\r\n    if (command.type === ProxyCommand.APPLY) {\r\n        let exeContext;\r\n        if (commandChain.prev) {\r\n            exeContext = await commandChain.prev.context;\r\n        }\r\n        // prepare arguments for Function.apply()\r\n        command.value = [exeContext, await lookupForResource(command.value)];\r\n    }\r\n    else {\r\n        command.value = await lookupForResource(command.value);\r\n    }\r\n    return {\r\n        id,\r\n        type: MessageType.REQUEST,\r\n        source,\r\n        target,\r\n        command,\r\n        context: contextTarget,\r\n    };\r\n};\r\nexport const createResponseMessage = (source) => \r\n// with \"undefined\" value, \"error\" key will not be packed into JSON, less bytes sent\r\n({ id, source: target }, value, error) => ({\r\n    id,\r\n    type: MessageType.RESPONSE,\r\n    source,\r\n    target,\r\n    value,\r\n    error,\r\n});\r\nexport const createIsHandshakeMessage = (id = '') => \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n(data) => data &&\r\n    typeof data === 'object' &&\r\n    typeof data.id === 'string' &&\r\n    ((!id && data.id.match(/^wi/)) || (id && id === data.id));\r\nexport const createIsMessage = (target) => \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n(data) => data &&\r\n    typeof data === 'object' &&\r\n    typeof data.id === 'string' &&\r\n    target === data.target;\r\nexport const resolveOrTimeout = ({ handler, timeout, timeoutError = `Async operation didn't complete in ${timeout}ms.`, onTimeout, }) => {\r\n    const promise = typeof handler === 'function' ? new Promise(handler) : handler;\r\n    return timeout\r\n        ? Promise.race([\r\n            promise,\r\n            new Promise((_, rej) => setTimeout(() => {\r\n                rej(timeoutError);\r\n                onTimeout && onTimeout(timeoutError);\r\n            }, timeout)),\r\n        ])\r\n        : promise;\r\n};\r\nexport const getMessageEventData = (event) => event instanceof Event ? event.data : event;\r\n//# sourceMappingURL=utils.js.map","import { createIsHandshakeMessage, getMessageEventData, InterfaceType, resolveOrTimeout, } from './utils';\r\n// leader\r\nconst handshakeHost = ({ id, root, isMessage, subscribe, unsubscribe, sendMessage, }) => (resolve) => {\r\n    const handshakeHandler = (event) => {\r\n        const data = getMessageEventData(event);\r\n        if (!isMessage(data)) {\r\n            return;\r\n        }\r\n        unsubscribe(handshakeHandler);\r\n        sendMessage({ id, root });\r\n        resolve(data);\r\n    };\r\n    subscribe(handshakeHandler);\r\n};\r\n// follower\r\nconst handshakeGuest = ({ id, root, isMessage, subscribe, unsubscribe, sendMessage, handshakeInterval, }) => (resolve) => {\r\n    let intervalId;\r\n    const handshakeHandler = (event) => {\r\n        const data = getMessageEventData(event);\r\n        if (!isMessage(data)) {\r\n            return;\r\n        }\r\n        unsubscribe(handshakeHandler);\r\n        clearInterval(intervalId);\r\n        resolve(data);\r\n    };\r\n    subscribe(handshakeHandler);\r\n    const intervalFn = () => sendMessage({ id, root });\r\n    if (handshakeInterval) {\r\n        // FIXME TS2322: Type 'Timer' is not assignable to type 'number'.\r\n        intervalId = setInterval(intervalFn, handshakeInterval);\r\n    }\r\n    else {\r\n        intervalFn();\r\n    }\r\n};\r\nexport const handshake = ({ type, remoteId, handshakeTimeout, ...params }) => {\r\n    const data = {\r\n        ...params,\r\n        isMessage: createIsHandshakeMessage(remoteId),\r\n    };\r\n    const handler = type === InterfaceType.HOST\r\n        ? handshakeHost(data)\r\n        : handshakeGuest(data);\r\n    return resolveOrTimeout({\r\n        handler,\r\n        timeout: handshakeTimeout,\r\n        timeoutError: `Handshake sequence could not complete in ${handshakeTimeout}ms.`,\r\n    });\r\n};\r\n//# sourceMappingURL=handshake.js.map","const EVENT_TYPE = 'message';\r\nexport const findEventEmitter = (worker) => {\r\n    if (worker) {\r\n        return worker;\r\n    }\r\n    if (typeof self === 'object') {\r\n        return self;\r\n    }\r\n    throw new Error('EventEmitter is not defined, please provide EventEmitter interface via \"worker\" or \"eventEmitter\" property.');\r\n};\r\nexport const findMessagePort = (worker) => {\r\n    if (worker) {\r\n        return worker;\r\n    }\r\n    if (typeof self === 'object') {\r\n        return self;\r\n    }\r\n    throw new Error('MessagePort is not defined, please provide MessagePort interface via \"worker\" or \"messagePort\" property.');\r\n};\r\nexport const createSubscriberFns = (instance) => {\r\n    if (instance.addEventListener) {\r\n        return {\r\n            subscribe: (listener) => instance.addEventListener(EVENT_TYPE, listener),\r\n            unsubscribe: (listener) => instance.removeEventListener(EVENT_TYPE, listener),\r\n        };\r\n    }\r\n    if (instance.addListener) {\r\n        return {\r\n            subscribe: (listener) => instance.addListener(EVENT_TYPE, listener),\r\n            unsubscribe: (listener) => instance.removeListener(EVENT_TYPE, listener),\r\n        };\r\n    }\r\n    if (instance.on) {\r\n        return {\r\n            subscribe: (listener) => instance.on(EVENT_TYPE, listener),\r\n            unsubscribe: (listener) => instance.off(EVENT_TYPE, listener),\r\n        };\r\n    }\r\n    throw new Error('Worker instance does not implement EventEmitter insterface, ' +\r\n        'it must expose \"addEventListener\"/\"removeEventListener\", ' +\r\n        '\"addListener\"/\"removeListener\" or ' +\r\n        '\"on\"/\"off\" method pair.');\r\n};\r\n//# sourceMappingURL=helpers.js.map","import { isReservedPropertyName, ReservedPropertyNames, } from '@actualwave/deferred-data-access/utils';\r\nimport { CommandChain, } from '@actualwave/deferred-data-access/command';\r\nimport { wrapWithProxy, createProxyTrapsObject, ProxyCommand, generateProxyCommand, } from '@actualwave/deferred-data-access/proxy';\r\nconst EMPTY_PROMISE = Promise.resolve(undefined);\r\nconst isPromiseActivity = (command) => {\r\n    const { type } = command;\r\n    if (type === ProxyCommand.GET || type === ProxyCommand.METHOD_CALL) {\r\n        return isReservedPropertyName(command.name);\r\n    }\r\n    if (type === ProxyCommand.APPLY) {\r\n        return isReservedPropertyName(command.prev?.name);\r\n    }\r\n    return false;\r\n};\r\nconst executePromiseMethod = (context, name, args) => {\r\n    switch (name) {\r\n        case ReservedPropertyNames.THEN:\r\n            return context.then(...args);\r\n        case ReservedPropertyNames.CATCH:\r\n            return context.catch(...args);\r\n        default:\r\n            throw new Error(`Unexpected Error: Promise method \"${String(name)}\" could not be called.`);\r\n    }\r\n};\r\nconst applyPromiseActivity = (command, commandHandler, lazy, wrap) => {\r\n    switch (command.type) {\r\n        case ProxyCommand.GET: {\r\n            const { name, prev } = command;\r\n            let { context } = command;\r\n            if (lazy) {\r\n                // then() / catch() on lazy means we should call handler and subscribe to promise\r\n                if (!prev) {\r\n                    throw new Error(`Unexpected Error: Proxy command GET has unknown context.`);\r\n                }\r\n                // When lazy, context is a dummy promise, so we have to call handler with previous command and then use it as a context.\r\n                context = commandHandler(prev, prev.context, wrap);\r\n            }\r\n            else {\r\n                // then() / catch() on non-lazy means we handler already called, just subscribe to promise of it\r\n                /*\r\n                   When not lazy, this promise was already created and is a context to this action.\r\n                   Without wrapper we may get this error:\r\n                   Uncaught TypeError: Method Promise.prototype.then called on incompatible receiver undefined\r\n                */\r\n                //return (context as any)[name as string](...(value as never[]));\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return (...args) => context[name](...args);\r\n        }\r\n        case ProxyCommand.METHOD_CALL:\r\n            if (!command.context) {\r\n                throw new Error(`Unexpected Error: Could not apply Promise method of unknown context.`);\r\n            }\r\n            return executePromiseMethod(command.context, command.name, command.value);\r\n        case ProxyCommand.APPLY:\r\n            {\r\n                const { prev } = command;\r\n                if (!prev?.context || !prev?.name) {\r\n                    throw new Error(`Unexpected Error: Could not apply Promise method of unknown context.`);\r\n                }\r\n                return executePromiseMethod(prev.context, prev.name, command.value);\r\n            }\r\n            break;\r\n        default:\r\n            throw new Error(`Command type \"${command.type}\" could not be executed as a Promise command.`);\r\n            break;\r\n    }\r\n};\r\nexport const handle = (commandHandler, lazy = true) => (context, command) => {\r\n    const wrap = (context, command) => {\r\n        const traps = createProxyTrapsObject((type, name, value, context) => {\r\n            const childCommand = generateProxyCommand(command, type, name, value, context, lazy);\r\n            let result;\r\n            if (isPromiseActivity(childCommand)) {\r\n                return applyPromiseActivity(childCommand, commandHandler, lazy, wrap);\r\n            }\r\n            else if ((type === ProxyCommand.APPLY || type === ProxyCommand.GET) &&\r\n                lazy) {\r\n                result = EMPTY_PROMISE;\r\n            }\r\n            else {\r\n                result = commandHandler(childCommand, context, wrap);\r\n            }\r\n            // anything coming not from Promise methods is always wrapped\r\n            return wrap(result, childCommand);\r\n        });\r\n        return wrapWithProxy(context, traps, {\r\n            getCommand() {\r\n                return command;\r\n            },\r\n            dropCommandChain() {\r\n                if (command) {\r\n                    delete command.prev;\r\n                }\r\n            },\r\n        });\r\n    };\r\n    return wrap(Promise.resolve(context), command ? CommandChain.fromCommand(command) : undefined);\r\n};\r\n//# sourceMappingURL=core.js.map","import { handle } from '@actualwave/deferred-data-access';\r\nimport { isResourceObject, } from '@actualwave/deferred-data-access/resource';\r\nimport { handshake } from './handshake';\r\nimport { pool, applyRemoteRequest } from './request';\r\nimport { createIsMessage, createRequestMessage, createResponseMessage, generateId, generateMessageId, getMessageEventData, MessageType, resolveOrTimeout, } from './utils';\r\n/*\r\n{\r\n  id,\r\n  type,\r\n  root,\r\n  remoteId, // we might expect a connection with matching ID\r\n  subscribe,\r\n  unsubscribe,\r\n  sendMessage,\r\n  handshakeTimeout,\r\n  responseTimeout,\r\n  handshakeInterval,\r\n}\r\n*/\r\nexport const initialize = async ({ id: initId, root: apiRoot, ...params }) => {\r\n    const id = initId || generateId();\r\n    const root = apiRoot\r\n        ? pool.set(apiRoot).toObject()\r\n        : undefined;\r\n    const { subscribe, unsubscribe, sendMessage } = params;\r\n    const { id: remoteId, root: remoteRoot } = await handshake({\r\n        id,\r\n        root,\r\n        ...params,\r\n    });\r\n    const pendingRequests = new Map(); // {[key: string]: { resolve: (value) => void, reject: (error) => void }}\r\n    const isMessage = createIsMessage(id);\r\n    const createRequest = createRequestMessage(id, remoteId);\r\n    const createResponse = createResponseMessage(id);\r\n    const messageHandler = async (event) => {\r\n        const data = getMessageEventData(event);\r\n        if (!isMessage(data)) {\r\n            return;\r\n        }\r\n        switch (data.type) {\r\n            case MessageType.REQUEST:\r\n                {\r\n                    const request = data;\r\n                    try {\r\n                        const value = await applyRemoteRequest(request);\r\n                        sendMessage(createResponse(request, value));\r\n                    }\r\n                    catch (error) {\r\n                        sendMessage(createResponse(request, undefined, { message: error.message }));\r\n                    }\r\n                }\r\n                break;\r\n            case MessageType.RESPONSE:\r\n                {\r\n                    const { id, value, error } = data;\r\n                    const { resolve, reject } = pendingRequests.get(id) || {};\r\n                    // if error present call reject, if not -- call resolve\r\n                    if (reject && error) {\r\n                        reject(error);\r\n                    }\r\n                    else if (resolve) {\r\n                        resolve(value);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    subscribe(messageHandler);\r\n    const stop = () => unsubscribe(messageHandler);\r\n    if (!remoteRoot) {\r\n        return { stop, pool };\r\n    }\r\n    const wrap = handle(async (command, context, \r\n    // wrap() is a partially applied handle(), so it makes possible to apply same command handlers to other objects\r\n    wrap) => {\r\n        const { responseTimeout } = params;\r\n        /*\r\n        If target is not a resource, there are no need to send command to remote, it can be resolved immediately.\r\n        Need to know if there will be such cases.\r\n      */\r\n        const id = generateMessageId();\r\n        const timeoutError = `Could not receive command ${command.type}/${String(command.name)} response in ${responseTimeout}ms.`;\r\n        const resultPromise = resolveOrTimeout({\r\n            handler: async (resolve, reject) => {\r\n                const request = await createRequest(command, context, id);\r\n                sendMessage(request);\r\n                pendingRequests.set(id, { resolve, reject });\r\n            },\r\n            timeout: responseTimeout || 0,\r\n            timeoutError,\r\n            onTimeout: () => {\r\n                const rq = pendingRequests.get(id);\r\n                if (!rq) {\r\n                    return;\r\n                }\r\n                rq.reject(new Error(timeoutError));\r\n                pendingRequests.delete(id);\r\n            },\r\n        });\r\n        const result = await resultPromise;\r\n        if (isResourceObject(result)) {\r\n            return wrap(resultPromise, command);\r\n        }\r\n        return resultPromise;\r\n    }, false);\r\n    return {\r\n        stop,\r\n        pool,\r\n        wrap,\r\n        pendingRequests,\r\n        root: remoteRoot ? wrap(remoteRoot) : null,\r\n    };\r\n};\r\n//# sourceMappingURL=intialize.js.map",null],"names":["DATE_NOW","Date","now","Math","floor","random","index","ReservedPropertyNames","isReservedPropertyName","name","THEN","CATCH","createUIDGenerator","key","prefix","generateId","IdOwner","constructor","id","this","Command","type","value","context","toObject","includeContext","undefined","toJSON","JSON","stringify","static","jsonString","parse","CommandChain","prev","super","Symbol","iterator","item","isTail","forEach","callback","node","map","list","push","reduce","base","result","ProxyCommand","EXCLUSIONS","arguments","caller","prototype","API_PROP","wrapWithProxy","target","traps","api","wrapper","Object","assign","args","apply","getTarget","Proxy","hasOwn","has","hasOwnProperty","property","Boolean","call","isNameExcluded","createGetTrap","handler","GET","createApplyTrap","thisValue","APPLY","createSetTrap","SET","createDeletePropertyTrap","DELETE_PROPERTY","proxyHasTrap","proxyOwnKeysTrap","getOwnPropertyNames","proxyEnumerateTrap","proxyGetOwnPropertyDescriptorTrap","getOwnPropertyDescriptor","KeysIterator","mapIterator","keys","next","done","get","deref","ValuesIterator","ref","EntriesIterator","entries","WeakValueMap","autoVerify","Map","finalizer","FinalizationRegistry","delete","size","values","set","WeakRef","clear","verify","Resource","pool","poolId","isResourceObject","obj","validTargets","Set","add","ResourcePool","refs","resources","WeakMap","active","resource","createResource","getById","getResource","remove","getDefaultResourcePool","generateGetDefaultResourcePool","ResourcePoolRegistry","pools","register","createPool","isRegistered","getRegistry","registry","generateGetRegistry","extractResourceFrom","Error","InterfaceType","MessageType","generateMessageId","lookupForResource","async","Array","unwrapProxy","createIsHandshakeMessage","data","match","resolveOrTimeout","timeout","timeoutError","onTimeout","promise","Promise","race","_","rej","setTimeout","getMessageEventData","event","Event","handshake","remoteId","handshakeTimeout","params","isMessage","HOST","root","subscribe","unsubscribe","sendMessage","resolve","handshakeHandler","handshakeHost","handshakeInterval","intervalId","clearInterval","intervalFn","setInterval","handshakeGuest","EVENT_TYPE","findEventEmitter","worker","self","findMessagePort","createSubscriberFns","instance","addEventListener","listener","removeEventListener","addListener","removeListener","on","off","EMPTY_PROMISE","executePromiseMethod","then","catch","String","handle","commandHandler","lazy","command","wrap","childCommand","head","METHOD_CALL","generateProxyCommand","isPromiseActivity","applyPromiseActivity","deleteProperty","ownKeys","enumerate","getCommand","dropCommandChain","fromCommand","initialize","initId","apiRoot","remoteRoot","pendingRequests","createRequest","source","commandChain","contextTarget","exeContext","REQUEST","createRequestMessage","createResponse","error","RESPONSE","messageHandler","request","applyRemoteRequest","message","reject","stop","responseTimeout","resultPromise","rq","Worker","postMessage","eventEmitter","messagePort","GUEST"],"mappings":"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"}